QA output created by 1705

=== bpftrace agent installation ===
Updating the Performance Metrics Name Space (PMNS) ...
Terminate PMDA if already installed ...
[...install files, make output...]
Updating the PMCD control file, and notifying PMCD ...
Check bpftrace metrics have appeared ... 7 metrics and 6 values

=== bpftrace script without variabes ===
bpftrace.control.register: new value="// name: test1
tracepoint:raw_syscalls:sys_enter { }" pmStore: Bad input to pmstore
OK

=== invalid probe ===
bpftrace.control.register old value="{}" new value="// name: test2
does_not_exist { @c = count(); }"
found metric bpftrace.scripts.test2.status matching "value "error""

bpftrace.scripts.test2.error
    value "Invalid provider: 'does_not_exist'"

bpftrace.scripts.test2.exit_code
    value 1

=== syntax error ===
bpftrace.control.register old value="{}" new value="// name: test3
does_not_exist { @c = count(; }"
found metric bpftrace.scripts.test3.status matching "value "error""

bpftrace.scripts.test3.error
    value "stdin:2:23-30: ERROR: syntax error, unexpected ;
does_not_exist { @c = count(; }
                      ~~~~~~~"

bpftrace.scripts.test3.exit_code
    value 1

=== too many attached tracepoints ===
bpftrace.control.register old value="{}" new value="// name: test4
kprobe:* { @c = count(); }"
found metric bpftrace.scripts.test4.status matching "value "error""

bpftrace.scripts.test4.error
    value "Can't attach to PROBES probes because it exceeds the current limit of PROBES probes.
You can increase the limit through the BPFTRACE_MAX_PROBES environment variable, but BE CAREFUL since a high number of probes attached can cause your system to crash."

bpftrace.scripts.test4.exit_code
    value 1

=== too much output ===
bpftrace.control.register old value="{}" new value="// name: test5
profile:hz:9999 { printf("test"); }"
found metric bpftrace.scripts.test5.status matching "value "error""

bpftrace.scripts.test5.error
    value "BPFtrace output exceeds limit of LIMIT bytes per second"

=== duplicate script name ===
bpftrace.control.register old value="{}" new value="// name: test6
tracepoint:raw_syscalls:sys_enter { @x = count() }"
bpftrace.control.register: new value="// name: test6
tracepoint:raw_syscalls:sys_enter { @x = count() }" pmStore: Bad input to pmstore
OK


=== remove bpftrace agent ===
Culling the Performance Metrics Name Space ...
bpftrace ... done
Updating the PMCD control file, and notifying PMCD ...
[...removing files...]
Check bpftrace metrics have gone away ... OK
